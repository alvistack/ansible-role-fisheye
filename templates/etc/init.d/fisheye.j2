#!/bin/bash

# {{ ansible_managed }}

### BEGIN INIT INFO
# Provides:          fisheye
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Initscript for Atlassian Fisheye
# Description:  Automatically start Atlassian Fisheye when the system starts up.
#               Provide commands for manually starting and stopping Fisheye.
### END INIT INFO

FISHEYE_OWNER=${FISHEYE_OWNER:-{{ fisheye_owner }}}
FISHEYE_GROUP=${FISHEYE_GROUP:-{{ fisheye_group }}}
FISHEYE_HOME=${FISHEYE_HOME:-{{ fisheye_home }}}
FISHEYE_CATALINA=${FISHEYE_CATALINA:-{{ fisheye_catalina }}}
FISHEYE_CATALINA_PID=${FISHEYE_HOME}/var/catalina.pid

start() {
    echo "Starting Fisheye: "

    if [ "x${USER}" != "x${FISHEYE_OWNER}" ]; then
        su -s /bin/bash ${FISHEYE_OWNER} -c "${FISHEYE_CATALINA}/bin/start.sh $@"
    else
        ${FISHEYE_CATALINA}/bin/start.sh $@
    fi

    echo "done."
}

stop() {
    echo "Shutting down Fisheye: "

    if [ "x${USER}" != "x${FISHEYE_OWNER}" ]; then
        su -s /bin/bash ${FISHEYE_OWNER} -c "${FISHEYE_CATALINA}/bin/stop.sh $@"
    else
        ${FISHEYE_CATALINA}/bin/stop.sh $@
    fi

    echo "done."
}

status() {
    if [ -f ${FISHEYE_CATALINA_PID} ]; then
        PID=$(<${FISHEYE_CATALINA_PID})
        if $(kill -0 "${PID:-}" 2> /dev/null); then
            echo "Fisheye is running"
            exit 0
        elif ps "${PID:-}" > /dev/null 2>&1; then
            echo "Fisheye is running"
            exit 0
        else
            echo "Fisheye is not running (pidfile exists)"
            exit 1
        fi
    fi

    echo "Fisheye is not running"

    exit 3
}

case "$1" in
    start)
        shift
        start $@
        ;;
    stop)
        shift
        stop $@
        ;;
    restart)
        shift
        stop $@
        start $@
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
        ;;
esac
