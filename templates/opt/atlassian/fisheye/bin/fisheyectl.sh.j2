#!/bin/sh

# {{ ansible_managed }}

FISHEYE_HOME="{{ fisheye_catalina }}"
FISHEYE_INST="{{ fisheye_home }}"

PRGRUNMODE=false
if [ "$2" = "-fg" ] || [ "$2" = "run" ]  ; then
    PRGRUNMODE=true
else
    echo "To run Fisheye in the foreground, start the server with $0 -fg"
fi

case "`uname`" in
    Darwin*) if [ -z "$JAVA_HOME" ] ; then
        JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Home
    fi
    ;;
esac

if [ -z "$FISHEYE_HOME" ]; then
    PRG="$0"
    FISHEYE_HOME=`dirname "$PRG"`/..
    # make it fully qualified
    export FISHEYE_HOME=`cd "$FISHEYE_HOME" && pwd`
fi

if [ ! -f "$FISHEYE_HOME/fisheyeboot.jar" ] ; then
    echo "Error: Could not find $FISHEYE_HOME/fisheyeboot.jar"
    exit 1
fi

if [ -z "$JAVACMD" ] ; then
    if [ -n "$JAVA_HOME"  ] ; then
        if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
            # IBM's JDK on AIX uses strange locations for the executables
            JAVACMD="$JAVA_HOME/jre/sh/java"
        else
            JAVACMD="$JAVA_HOME/bin/java"
        fi
    else
        JAVACMD=`which java 2> /dev/null `
        if [ -z "$JAVACMD" ] ; then
            JAVACMD=java
        fi
    fi
fi

if [ ! -x "$JAVACMD" ] ; then
    echo "Error: JAVA_HOME is not defined correctly."
    echo "  We cannot execute $JAVACMD"
    exit 1
fi

FISHEYE_OPTS=`$JAVACMD -cp $FISHEYE_HOME/fisheyeboot.jar com.cenqua.fisheye.boot.OptsSetter`
FISHEYE_OPTS="-Xms{{ fisheye_jvm_minimum_memory }} -Xmx{{ fisheye_jvm_maximum_memory }} {{ fisheye_jvm_support_recommended_args }} $FISHEYE_OPTS"

FISHEYE_CMD="$JAVACMD $FISHEYE_OPTS -Dfisheye.library.path=$FISHEYE_LIBRARY_PATH -Dfisheye.inst=$FISHEYE_INST -Djava.awt.headless=true -Djava.endorsed.dirs=$FISHEYE_HOME/lib/endorsed -jar $FISHEYE_HOME/fisheyeboot.jar"

# set the location of the pid file
if [ -z "$CATALINA_PID" ] ; then
    if [ -n "$FISHEYE_INST" ] ; then
        CATALINA_PID="$FISHEYE_INST"/var/catalina.pid
    elif [ -n "$FISHEYE_HOME" ] ; then
        CATALINA_PID="$FISHEYE_HOME"/var/catalina.pid
    fi
fi
export CATALINA_PID

case "$1" in
    start)
        if [ ! -z "$CATALINA_PID" ]; then
            if [ -f "$CATALINA_PID" ]; then
                if [ -s "$CATALINA_PID" ]; then
                    echo "Existing PID file found during start."
                    if [ -r "$CATALINA_PID" ]; then
                        PID=`cat "$CATALINA_PID"`
                        ps -p $PID >/dev/null 2>&1
                        if [ $? -eq 0 ] ; then
                            echo "Tomcat appears to still be running with PID $PID. Start aborted."
                            exit 1
                        else
                            echo "Removing/clearing stale PID file."
                            rm -f "$CATALINA_PID" >/dev/null 2>&1
                            if [ $? != 0 ]; then
                                if [ -w "$CATALINA_PID" ]; then
                                    cat /dev/null > "$CATALINA_PID"
                                else
                                    echo "Unable to remove or clear stale PID file. Start aborted."
                                    exit 1
                                fi
                            fi
                        fi
                    else
                        echo "Unable to read PID file. Start aborted."
                        exit 1
                    fi
                else
                    rm -f "$CATALINA_PID" >/dev/null 2>&1
                    if [ $? != 0 ]; then
                        if [ ! -w "$CATALINA_PID" ]; then
                            echo "Unable to remove or write to empty PID file. Start aborted."
                            exit 1
                        fi
                    fi
                fi
            fi
        fi

        cd $FISHEYE_INST
        mkdir -p $FISHEYE_INST/var/log
        CMD="$FISHEYE_CMD $@ $FISHEYE_ARGS"
        echo "Starting FishEye/Crucible... Output redirected to $FISHEYE_INST/var/log/fisheye.out"
        if [ "$PRGRUNMODE" = "true" ] ; then
            nohup sh -c "exec $CMD" >> $FISHEYE_INST/var/log/fisheye.out 2>&1
        else
            nohup sh -c "exec $CMD" >> $FISHEYE_INST/var/log/fisheye.out 2>&1 &
        fi

        sleep 3
        echo $! > "$CATALINA_PID"
        ;;
    stop)
        if [ ! -z "$CATALINA_PID" ]; then
            if [ -f "$CATALINA_PID" ]; then
                if [ -s "$CATALINA_PID" ]; then
                    kill -0 `cat "$CATALINA_PID"` >/dev/null 2>&1
                    if [ $? -gt 0 ]; then
                        echo "PID file found but no matching process was found. Stop aborted."
                        exit 1
                    fi
                else
                    echo "PID file is empty and has been ignored."
                fi
            else
                echo "\$CATALINA_PID was set but the specified file does not exist. Is Tomcat running? Stop aborted."
                exit 1
            fi
        fi

        exec $FISHEYE_CMD $@ $FISHEYE_ARGS

        sleep 3
        rm -f "$CATALINA_PID" >/dev/null 2>&1
        ;;
    *)
        exec $FISHEYE_CMD $@ $FISHEYE_ARGS
        ;;
esac
