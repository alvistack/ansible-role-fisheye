---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include default variables
  include_vars: "../vars/main.yml"
  tags: fisheye

- name: include release specific variables
  include_vars: "{{ lookup('first_found', _params) }}"
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
  ignore_errors: true
  tags: fisheye

- name: include release specific tasks
  include_tasks: "{{ lookup('first_found', _params) }}"
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
  ignore_errors: true
  tags: fisheye

- name: groupadd
  group:
    name: "{{ fisheye_group }}"
    system: true
    state: "present"
  tags: fisheye

- name: useradd
  user:
    name: "{{ fisheye_owner }}"
    group: "{{ fisheye_group }}"
    home: "{{ fisheye_home }}"
    shell: "/usr/sbin/nologin"
    system: true
    create_home: false
    state: "present"
  tags: fisheye

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/lib/systemd/system" }
    - { dest: "{{ fisheye_download.dest | dirname }}" }
    - { dest: "{{ mysql_jdbc_download.dest | dirname }}" }
    - { dest: "{{ postgresql_jdbc_download.dest | dirname }}" }
    - dest: "{{ fisheye_catalina }}"
      owner: "{{ fisheye_owner }}"
      group: "{{ fisheye_group }}"
    - dest: "{{ fisheye_catalina }}/bin"
      owner: "{{ fisheye_owner }}"
      group: "{{ fisheye_group }}"
    - dest: "{{ fisheye_home }}"
      owner: "{{ fisheye_owner }}"
      group: "{{ fisheye_group }}"
    - dest: "{{ fisheye_home }}/var"
      owner: "{{ fisheye_owner }}"
      group: "{{ fisheye_group }}"
    - dest: "{{ fisheye_home }}/var/log"
      owner: "{{ fisheye_owner }}"
      group: "{{ fisheye_group }}"
  tags: fisheye

- name: download archive
  vars:
    ansible_python_interpreter: "python3"
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
    checksum: "{{ item.checksum }}"
    mode: "{{ item.mode | default('0644') }}"
    timeout: 300
  loop:
    - "{{ fisheye_download }}"
    - "{{ mysql_jdbc_download }}"
    - "{{ postgresql_jdbc_download }}"
  register: get_url_result
  until: get_url_result is succeeded
  tags: fisheye

- name: unarchive package
  shell: |
    set -o pipefail
    rm -rf {{ fisheye_catalina }} \
      && mkdir -p {{ fisheye_catalina }}
    cd {{ fisheye_catalina }}
    TMP_DIR="$(mktemp -d)" \
      && unzip -qq -d $TMP_DIR {{ fisheye_download.dest }} \
      && cp -rfT $TMP_DIR/* . \
      && rm -rf $TMP_DIR
    cd {{ fisheye_catalina }}/lib
    rm -rf *mysql*.jar
    TMP_DIR="$(mktemp -d)" \
      && tar -zx -C $TMP_DIR -f {{ mysql_jdbc_download.dest }} \
      && mv $TMP_DIR/*/*mysql*-bin.jar . \
      && rm -rf $TMP_DIR
    cd {{ fisheye_catalina }}/lib
    rm -rf *postgresql*.jar
    cp {{ postgresql_jdbc_download.dest }} .
    chown -Rf {{ fisheye_owner }}:{{ fisheye_group }} {{ fisheye_catalina }}
    chmod 0755 \
      {{ fisheye_catalina }} \
      {{ fisheye_catalina }}/bin
  args:
    executable: "/bin/bash"
  when: get_url_result is changed
  notify:
    - fisheye | systemctl daemon-reload
    - fisheye | systemctl restart fisheye
  tags: fisheye

- name: copy templates
  template:
    dest: "{{ item.dest }}"
    src: "{{ item.src | default('./templates' + item.dest + '.j2') }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { dest: "/lib/systemd/system/fisheye.service" }
    - dest: "{{ fisheye_catalina }}/bin/fisheyectl.sh"
      src: "./templates/opt/atlassian/fisheye/bin/fisheyectl.sh.j2"
      owner: "{{ fisheye_owner }}"
      group: "{{ fisheye_group }}"
      mode: "0755"
    - dest: "{{ fisheye_catalina }}/bin/start.sh"
      src: "./templates/opt/atlassian/fisheye/bin/start.sh.j2"
      owner: "{{ fisheye_owner }}"
      group: "{{ fisheye_group }}"
      mode: "0755"
  notify:
    - fisheye | systemctl daemon-reload
    - fisheye | systemctl restart fisheye
  tags: fisheye

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/lib/systemd/system/fisheye.service" }
    - dest: "{{ fisheye_catalina }}/bin/fisheyectl.sh"
      owner: "{{ fisheye_owner }}"
      group: "{{ fisheye_group }}"
      mode: "0755"
    - dest: "{{ fisheye_catalina }}/bin/start.sh"
      owner: "{{ fisheye_owner }}"
      group: "{{ fisheye_group }}"
      mode: "0755"
  tags: fisheye

- name: patch {{ fisheye_catalina }}/content/WEB-INF/web.xml
  vars:
    ansible_python_interpreter: "python3"
  xml:
    path: "{{ fisheye_catalina }}/content/WEB-INF/web.xml"
    xpath: "/ns:web-app/ns:session-config/ns:session-timeout"
    namespaces:
      ns: "http://java.sun.com/xml/ns/javaee"
    value: "{{ fisheye_session_timeout | int }}"
    state: present
  notify:
    - fisheye | systemctl daemon-reload
    - fisheye | systemctl restart fisheye
  tags: fisheye

- name: systemctl start fisheye
  service:
    name: "fisheye"
    state: "started"
    enabled: true
  changed_when: false
  ignore_errors: true
  tags: fisheye

- name: flush handlers
  meta: flush_handlers
  tags: fisheye
