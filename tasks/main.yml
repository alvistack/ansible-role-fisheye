---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include release specific variables
  include_vars: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "../vars"
      skip: true
  loop_control:
    loop_var: "loop_var"
  tags: fisheye

- name: include release specific tasks
  include_tasks: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "."
      skip: true
  loop_control:
    loop_var: "loop_var"
  tags: fisheye

- name: groupadd
  group:
    name: "fisheye"
    system: true
    state: "present"
  tags: fisheye

- name: useradd
  user:
    name: "fisheye"
    group: "fisheye"
    home: "/var/atlassian/application-data/fisheye"
    shell: "/usr/sbin/nologin"
    system: true
    create_home: false
    state: "present"
  tags: fisheye

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  with_items:
    - { dest: "/etc/init.d" }
    - { dest: "/lib/systemd/system" }
    - { dest: "/opt/atlassian/fisheye", owner: "fisheye", group: "fisheye" }
    - { dest: "/opt/atlassian/fisheye/bin", owner: "fisheye", group: "fisheye" }
    - { dest: "/var/atlassian/application-data/fisheye", owner: "fisheye", group: "fisheye" }
    - { dest: "/var/atlassian/application-data/fisheye/var", owner: "fisheye", group: "fisheye" }
    - { dest: "/var/atlassian/application-data/fisheye/var/log", owner: "fisheye", group: "fisheye" }
  tags: fisheye

- name: unarchive package
  shell: |
    set -o pipefail
    cd /opt/atlassian/fisheye
    ARCHIVE="`mktemp --suffix=.zip`"
    curl -skL {{ fisheye_download_url }} > $ARCHIVE
    TMP_DIR="`mktemp -d`" && unzip -qq $ARCHIVE -x -d $TMP_DIR && rsync -aq $TMP_DIR/*/ . && rm -rf $TMP_DIR
    rm -rf $ARCHIVE
    cd /opt/atlassian/fisheye/lib
    rm -rf *mysql*.jar
    curl -skL {{ mysql_jdbc_download_url }} | tar zxf - --strip-components=1 --wildcards "mysql*/*mysql*.jar"
    cd /opt/atlassian/fisheye/lib
    rm -rf *postgresql*.jar
    curl -skL {{ postgresql_jdbc_download_url }} -O
    chown -Rf fisheye:fisheye /opt/atlassian/fisheye
  args:
    creates: "/opt/atlassian/fisheye/bin/start.sh"
  tags: fisheye

- name: copy templates
  template:
    src: "./templates{{ item.dest }}.j2"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  with_items:
    - { dest: "/etc/init.d/fisheye", mode: "0755" }
    - { dest: "/lib/systemd/system/fisheye.service" }
    - { dest: "/opt/atlassian/fisheye/bin/fisheyectl.sh", owner: "fisheye", group: "fisheye", mode: "0755" }
    - { dest: "/opt/atlassian/fisheye/bin/start.sh", owner: "fisheye", group: "fisheye", mode: "0755" }
  notify:
    - systemctl daemon-reload
  tags: fisheye

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  with_items:
    - { dest: "/etc/init.d/fisheye", mode: "0755" }
    - { dest: "/lib/systemd/system/fisheye.service" }
    - { dest: "/opt/atlassian/fisheye/bin/fisheyectl.sh", owner: "fisheye", group: "fisheye", mode: "0755" }
    - { dest: "/opt/atlassian/fisheye/bin/start.sh", owner: "fisheye", group: "fisheye", mode: "0755" }
  tags: fisheye

- name: patch /opt/atlassian/fisheye/content/WEB-INF/web.xml
  lineinfile:
    path: "/opt/atlassian/fisheye/content/WEB-INF/web.xml"
    regexp: "^        <session-timeout>[0-9]*</session-timeout>"
    line: "        <session-timeout>{{ fisheye_session_timeout | int }}</session-timeout>"
    insertbefore: "^    </session-config>"
    state: present
  tags: fisheye

- name: enable service
  service:
    name: fisheye
    enabled: true
  changed_when: false
  ignore_errors: true
  tags: fisheye
